{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/wbarakzai/Documents/1.Spring20/Athenomics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _awaitAsyncGenerator = require(\"/Users/wbarakzai/Documents/1.Spring20/Athenomics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/Users/wbarakzai/Documents/1.Spring20/Athenomics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar _asyncIterator = require(\"/Users/wbarakzai/Documents/1.Spring20/Athenomics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\n/* eslint-env browser */\nmodule.exports = function (source) {\n  return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var matcher, decoder, buffer, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, chunk, parts, i;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            matcher = /\\r?\\n/;\n            decoder = new TextDecoder('utf8');\n            buffer = '';\n            _iteratorNormalCompletion = true;\n            _didIteratorError = false;\n            _context.prev = 5;\n            _iterator = _asyncIterator(source);\n\n          case 7:\n            _context.next = 9;\n            return _awaitAsyncGenerator(_iterator.next());\n\n          case 9:\n            _step = _context.sent;\n            _iteratorNormalCompletion = _step.done;\n            _context.next = 13;\n            return _awaitAsyncGenerator(_step.value);\n\n          case 13:\n            _value = _context.sent;\n\n            if (_iteratorNormalCompletion) {\n              _context.next = 30;\n              break;\n            }\n\n            chunk = _value;\n\n            if (typeof chunk === 'string') {\n              chunk = new TextEncoder().encode(chunk);\n            }\n\n            buffer += decoder.decode(chunk, {\n              stream: true\n            });\n            parts = buffer.split(matcher);\n            buffer = parts.pop();\n            i = 0;\n\n          case 21:\n            if (!(i < parts.length)) {\n              _context.next = 27;\n              break;\n            }\n\n            _context.next = 24;\n            return JSON.parse(parts[i]);\n\n          case 24:\n            i++;\n            _context.next = 21;\n            break;\n\n          case 27:\n            _iteratorNormalCompletion = true;\n            _context.next = 7;\n            break;\n\n          case 30:\n            _context.next = 36;\n            break;\n\n          case 32:\n            _context.prev = 32;\n            _context.t0 = _context[\"catch\"](5);\n            _didIteratorError = true;\n            _iteratorError = _context.t0;\n\n          case 36:\n            _context.prev = 36;\n            _context.prev = 37;\n\n            if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n              _context.next = 41;\n              break;\n            }\n\n            _context.next = 41;\n            return _awaitAsyncGenerator(_iterator.return());\n\n          case 41:\n            _context.prev = 41;\n\n            if (!_didIteratorError) {\n              _context.next = 44;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 44:\n            return _context.finish(41);\n\n          case 45:\n            return _context.finish(36);\n\n          case 46:\n            buffer += decoder.decode();\n\n            if (!buffer) {\n              _context.next = 50;\n              break;\n            }\n\n            _context.next = 50;\n            return JSON.parse(buffer);\n\n          case 50:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[5, 32, 36, 46], [37,, 41, 45]]);\n  }))();\n};","map":null,"metadata":{},"sourceType":"script"}