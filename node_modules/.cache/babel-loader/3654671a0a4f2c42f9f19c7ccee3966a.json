{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/wbarakzai/Documents/1.Spring20/Athenomics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/Users/wbarakzai/Documents/1.Spring20/Athenomics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\n\nvar _asyncToGenerator = require(\"/Users/wbarakzai/Documents/1.Spring20/Athenomics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _awaitAsyncGenerator = require(\"/Users/wbarakzai/Documents/1.Spring20/Athenomics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/Users/wbarakzai/Documents/1.Spring20/Athenomics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar _asyncIterator = require(\"/Users/wbarakzai/Documents/1.Spring20/Athenomics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nvar defer = require('p-defer');\n\nvar Headers = require('./extract-headers');\n\nvar LteReader = require('./lte-reader');\n\nfunction getPadding(size) {\n  size &= 511;\n  return size && 512 - size;\n}\n\nfunction discardPadding(_x, _x2) {\n  return _discardPadding.apply(this, arguments);\n}\n\nfunction _discardPadding() {\n  _discardPadding = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(reader, size) {\n    var overflow;\n    return _regeneratorRuntime.wrap(function _callee4$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            overflow = getPadding(size);\n\n            if (!overflow) {\n              _context5.next = 4;\n              break;\n            }\n\n            _context5.next = 4;\n            return reader.next(overflow);\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _discardPadding.apply(this, arguments);\n}\n\nmodule.exports = function (options) {\n  options = options || {};\n  options.highWaterMark = options.highWaterMark || 1024 * 16;\n  return function (source) {\n    return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var reader, gnuLongPath, gnuLongLinkPath, paxGlobal, pax, _loop, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, _ret;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              reader = LteReader(source);\n              _context4.prev = 1;\n              _loop = /*#__PURE__*/_regeneratorRuntime.mark(function _loop() {\n                var headerBytes, _ref4, done, value, header, _ref5, _done, gnuLongPathBytes, _ref6, _done2, gnuLongLinkPathBytes, _ref7, _done3, paxGlobalBytes, _ref8, _done4, paxBytes, bytesRemaining, bodyConsumed, firstChunk, body, _;\n\n                return _regeneratorRuntime.wrap(function _loop$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        headerBytes = void 0;\n                        _context3.prev = 1;\n                        _context3.next = 4;\n                        return _awaitAsyncGenerator(reader.next(512));\n\n                      case 4:\n                        _ref4 = _context3.sent;\n                        done = _ref4.done;\n                        value = _ref4.value;\n\n                        if (!done) {\n                          _context3.next = 9;\n                          break;\n                        }\n\n                        return _context3.abrupt(\"return\", {\n                          v: void 0\n                        });\n\n                      case 9:\n                        headerBytes = value;\n                        _context3.next = 17;\n                        break;\n\n                      case 12:\n                        _context3.prev = 12;\n                        _context3.t0 = _context3[\"catch\"](1);\n\n                        if (!(_context3.t0.code === 'ERR_UNDER_READ')) {\n                          _context3.next = 16;\n                          break;\n                        }\n\n                        return _context3.abrupt(\"return\", {\n                          v: void 0\n                        });\n\n                      case 16:\n                        throw _context3.t0;\n\n                      case 17:\n                        header = Headers.decode(headerBytes, options.filenameEncoding);\n\n                        if (header) {\n                          _context3.next = 20;\n                          break;\n                        }\n\n                        return _context3.abrupt(\"return\", \"continue\");\n\n                      case 20:\n                        if (!(header.type === 'gnu-long-path')) {\n                          _context3.next = 32;\n                          break;\n                        }\n\n                        _context3.next = 23;\n                        return _awaitAsyncGenerator(reader.next(header.size));\n\n                      case 23:\n                        _ref5 = _context3.sent;\n                        _done = _ref5.done;\n                        gnuLongPathBytes = _ref5.value;\n\n                        if (!_done) {\n                          _context3.next = 28;\n                          break;\n                        }\n\n                        return _context3.abrupt(\"return\", {\n                          v: void 0\n                        });\n\n                      case 28:\n                        gnuLongPath = Headers.decodeLongPath(gnuLongPathBytes, options.filenameEncoding);\n                        _context3.next = 31;\n                        return _awaitAsyncGenerator(discardPadding(reader, header.size));\n\n                      case 31:\n                        return _context3.abrupt(\"return\", \"continue\");\n\n                      case 32:\n                        if (!(header.type === 'gnu-long-link-path')) {\n                          _context3.next = 44;\n                          break;\n                        }\n\n                        _context3.next = 35;\n                        return _awaitAsyncGenerator(reader.next(header.size));\n\n                      case 35:\n                        _ref6 = _context3.sent;\n                        _done2 = _ref6.done;\n                        gnuLongLinkPathBytes = _ref6.value;\n\n                        if (!_done2) {\n                          _context3.next = 40;\n                          break;\n                        }\n\n                        return _context3.abrupt(\"return\", {\n                          v: void 0\n                        });\n\n                      case 40:\n                        gnuLongLinkPath = Headers.decodeLongPath(gnuLongLinkPathBytes, options.filenameEncoding);\n                        _context3.next = 43;\n                        return _awaitAsyncGenerator(discardPadding(reader, header.size));\n\n                      case 43:\n                        return _context3.abrupt(\"return\", \"continue\");\n\n                      case 44:\n                        if (!(header.type === 'pax-global-header')) {\n                          _context3.next = 56;\n                          break;\n                        }\n\n                        _context3.next = 47;\n                        return _awaitAsyncGenerator(reader.next(header.size));\n\n                      case 47:\n                        _ref7 = _context3.sent;\n                        _done3 = _ref7.done;\n                        paxGlobalBytes = _ref7.value;\n\n                        if (!_done3) {\n                          _context3.next = 52;\n                          break;\n                        }\n\n                        return _context3.abrupt(\"return\", {\n                          v: void 0\n                        });\n\n                      case 52:\n                        paxGlobal = Headers.decodePax(paxGlobalBytes, options.filenameEncoding);\n                        _context3.next = 55;\n                        return _awaitAsyncGenerator(discardPadding(reader, header.size));\n\n                      case 55:\n                        return _context3.abrupt(\"return\", \"continue\");\n\n                      case 56:\n                        if (!(header.type === 'pax-header')) {\n                          _context3.next = 69;\n                          break;\n                        }\n\n                        _context3.next = 59;\n                        return _awaitAsyncGenerator(reader.next(header.size));\n\n                      case 59:\n                        _ref8 = _context3.sent;\n                        _done4 = _ref8.done;\n                        paxBytes = _ref8.value;\n\n                        if (!_done4) {\n                          _context3.next = 64;\n                          break;\n                        }\n\n                        return _context3.abrupt(\"return\", {\n                          v: void 0\n                        });\n\n                      case 64:\n                        pax = Headers.decodePax(paxBytes, options.filenameEncoding);\n                        if (paxGlobal) pax = _objectSpread({}, paxGlobal, pax);\n                        _context3.next = 68;\n                        return _awaitAsyncGenerator(discardPadding(reader, header.size));\n\n                      case 68:\n                        return _context3.abrupt(\"return\", \"continue\");\n\n                      case 69:\n                        if (gnuLongPath) {\n                          header.name = gnuLongPath;\n                          gnuLongPath = null;\n                        }\n\n                        if (gnuLongLinkPath) {\n                          header.linkname = gnuLongLinkPath;\n                          gnuLongLinkPath = null;\n                        }\n\n                        if (pax) {\n                          if (pax.path) header.name = pax.path;\n                          if (pax.linkpath) header.linkname = pax.linkpath;\n                          if (pax.size) header.size = parseInt(pax.size, 10);\n                          header.pax = pax;\n                          pax = null;\n                        }\n\n                        if (!(!header.size || header.type === 'directory')) {\n                          _context3.next = 76;\n                          break;\n                        }\n\n                        _context3.next = 75;\n                        return {\n                          header: header,\n                          body: _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                            return _regeneratorRuntime.wrap(function _callee$(_context) {\n                              while (1) {\n                                switch (_context.prev = _context.next) {\n                                  case 0:\n                                  case \"end\":\n                                    return _context.stop();\n                                }\n                              }\n                            }, _callee);\n                          }))()\n                        };\n\n                      case 75:\n                        return _context3.abrupt(\"return\", \"continue\");\n\n                      case 76:\n                        bytesRemaining = header.size;\n                        bodyConsumed = defer(); // Prefetch the first chunk.\n                        // This allows us to stream entries for small files from the tar without\n                        // explicitly streaming the body of each.\n\n                        _context3.next = 80;\n                        return _awaitAsyncGenerator(reader.nextLte(Math.min(bytesRemaining, options.highWaterMark)));\n\n                      case 80:\n                        firstChunk = _context3.sent;\n                        bytesRemaining -= firstChunk.value.length;\n                        if (!bytesRemaining) bodyConsumed.resolve();\n                        body = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                          var _ref9, _done5, _value2;\n\n                          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                            while (1) {\n                              switch (_context2.prev = _context2.next) {\n                                case 0:\n                                  _context2.prev = 0;\n                                  _context2.next = 3;\n                                  return firstChunk.value;\n\n                                case 3:\n                                  if (!bytesRemaining) {\n                                    _context2.next = 17;\n                                    break;\n                                  }\n\n                                  _context2.next = 6;\n                                  return _awaitAsyncGenerator(reader.nextLte(bytesRemaining));\n\n                                case 6:\n                                  _ref9 = _context2.sent;\n                                  _done5 = _ref9.done;\n                                  _value2 = _ref9.value;\n\n                                  if (!_done5) {\n                                    _context2.next = 12;\n                                    break;\n                                  }\n\n                                  bytesRemaining = 0;\n                                  return _context2.abrupt(\"return\");\n\n                                case 12:\n                                  bytesRemaining -= _value2.length;\n                                  _context2.next = 15;\n                                  return _value2;\n\n                                case 15:\n                                  _context2.next = 3;\n                                  break;\n\n                                case 17:\n                                  _context2.prev = 17;\n                                  bodyConsumed.resolve();\n                                  return _context2.finish(17);\n\n                                case 20:\n                                case \"end\":\n                                  return _context2.stop();\n                              }\n                            }\n                          }, _callee2, null, [[0,, 17, 20]]);\n                        }))();\n                        _context3.next = 86;\n                        return {\n                          header: header,\n                          body: body\n                        };\n\n                      case 86:\n                        _context3.next = 88;\n                        return _awaitAsyncGenerator(bodyConsumed.promise);\n\n                      case 88:\n                        if (!bytesRemaining) {\n                          _context3.next = 121;\n                          break;\n                        }\n\n                        _iteratorNormalCompletion = true;\n                        _didIteratorError = false;\n                        _context3.prev = 91;\n                        _iterator = _asyncIterator(body);\n\n                      case 93:\n                        _context3.next = 95;\n                        return _awaitAsyncGenerator(_iterator.next());\n\n                      case 95:\n                        _step = _context3.sent;\n                        _iteratorNormalCompletion = _step.done;\n                        _context3.next = 99;\n                        return _awaitAsyncGenerator(_step.value);\n\n                      case 99:\n                        _value = _context3.sent;\n\n                        if (_iteratorNormalCompletion) {\n                          _context3.next = 105;\n                          break;\n                        }\n\n                        _ = _value;\n\n                      case 102:\n                        _iteratorNormalCompletion = true;\n                        _context3.next = 93;\n                        break;\n\n                      case 105:\n                        _context3.next = 111;\n                        break;\n\n                      case 107:\n                        _context3.prev = 107;\n                        _context3.t1 = _context3[\"catch\"](91);\n                        _didIteratorError = true;\n                        _iteratorError = _context3.t1;\n\n                      case 111:\n                        _context3.prev = 111;\n                        _context3.prev = 112;\n\n                        if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n                          _context3.next = 116;\n                          break;\n                        }\n\n                        _context3.next = 116;\n                        return _awaitAsyncGenerator(_iterator.return());\n\n                      case 116:\n                        _context3.prev = 116;\n\n                        if (!_didIteratorError) {\n                          _context3.next = 119;\n                          break;\n                        }\n\n                        throw _iteratorError;\n\n                      case 119:\n                        return _context3.finish(116);\n\n                      case 120:\n                        return _context3.finish(111);\n\n                      case 121:\n                        _context3.next = 123;\n                        return _awaitAsyncGenerator(discardPadding(reader, header.size));\n\n                      case 123:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _loop, null, [[1, 12], [91, 107, 111, 121], [112,, 116, 120]]);\n              });\n\n            case 3:\n              if (!true) {\n                _context4.next = 14;\n                break;\n              }\n\n              return _context4.delegateYield(_loop(), \"t0\", 5);\n\n            case 5:\n              _ret = _context4.t0;\n              _context4.t1 = _ret;\n              _context4.next = _context4.t1 === \"continue\" ? 9 : 10;\n              break;\n\n            case 9:\n              return _context4.abrupt(\"continue\", 3);\n\n            case 10:\n              if (!(typeof _ret === \"object\")) {\n                _context4.next = 12;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", _ret.v);\n\n            case 12:\n              _context4.next = 3;\n              break;\n\n            case 14:\n              _context4.prev = 14;\n              _context4.next = 17;\n              return _awaitAsyncGenerator(reader.return());\n\n            case 17:\n              return _context4.finish(14);\n\n            case 18:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee3, null, [[1,, 14, 18]]);\n    }))();\n  };\n};","map":null,"metadata":{},"sourceType":"script"}