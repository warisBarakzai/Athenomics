{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/wbarakzai/Documents/1.Spring20/Athenomics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/wbarakzai/Documents/1.Spring20/Athenomics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar CID = require('cids');\n\nvar _require = require('ipld-dag-pb'),\n    DAGNode = _require.DAGNode;\n\nvar _require2 = require('buffer'),\n    Buffer = _require2.Buffer;\n\nvar configure = require('../lib/configure');\n\nvar toFormData = require('../lib/buffer-to-form-data');\n\nmodule.exports = configure(function (_ref) {\n  var ky = _ref.ky;\n  return (/*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(obj, options) {\n        var tmpObj, buf, searchParams, _ref3, Hash;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = options || {};\n                tmpObj = {\n                  Data: null,\n                  Links: []\n                };\n\n                if (!Buffer.isBuffer(obj)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                if (!options.enc) {\n                  tmpObj = {\n                    Data: obj.toString(),\n                    Links: []\n                  };\n                }\n\n                _context.next = 16;\n                break;\n\n              case 6:\n                if (!DAGNode.isDAGNode(obj)) {\n                  _context.next = 10;\n                  break;\n                }\n\n                tmpObj = {\n                  Data: obj.Data.toString(),\n                  Links: obj.Links.map(function (l) {\n                    return {\n                      Name: l.Name,\n                      Hash: l.Hash.toString(),\n                      Size: l.Tsize\n                    };\n                  })\n                };\n                _context.next = 16;\n                break;\n\n              case 10:\n                if (!(typeof obj === 'object')) {\n                  _context.next = 15;\n                  break;\n                }\n\n                tmpObj.Data = obj.Data.toString();\n                tmpObj.Links = obj.Links;\n                _context.next = 16;\n                break;\n\n              case 15:\n                throw new Error('obj not recognized');\n\n              case 16:\n                if (Buffer.isBuffer(obj) && options.enc) {\n                  buf = obj;\n                } else {\n                  buf = Buffer.from(JSON.stringify(tmpObj));\n                }\n\n                searchParams = new URLSearchParams(options.searchParams);\n                if (options.enc) searchParams.set('inputenc', options.enc);\n                if (options.pin != null) searchParams.set('pin', options.pin);\n                if (options.quiet != null) searchParams.set('quiet', options.quiet);\n                _context.next = 23;\n                return ky.post('object/put', {\n                  timeout: options.timeout,\n                  signal: options.signal,\n                  headers: options.headers,\n                  searchParams: searchParams,\n                  body: toFormData(buf)\n                }).json();\n\n              case 23:\n                _ref3 = _context.sent;\n                Hash = _ref3.Hash;\n                return _context.abrupt(\"return\", new CID(Hash));\n\n              case 26:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n});","map":null,"metadata":{},"sourceType":"script"}