{"ast":null,"code":"'use strict';\n/* eslint-env browser */\n\nvar _regeneratorRuntime = require(\"/Users/wbarakzai/Documents/1.Spring20/Athenomics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/wbarakzai/Documents/1.Spring20/Athenomics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _asyncIterator = require(\"/Users/wbarakzai/Documents/1.Spring20/Athenomics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nvar normaliseInput = require('ipfs-utils/src/files/normalise-input');\n\nvar mtimeToObject = require('../lib/mtime-to-object');\n\nexports.toFormData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(input) {\n    var files, formData, i, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, file, headers, mtime, bufs, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, _value2, chunk;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            files = normaliseInput(input);\n            formData = new FormData();\n            i = 0;\n            _iteratorNormalCompletion = true;\n            _didIteratorError = false;\n            _context.prev = 5;\n            _iterator = _asyncIterator(files);\n\n          case 7:\n            _context.next = 9;\n            return _iterator.next();\n\n          case 9:\n            _step = _context.sent;\n            _iteratorNormalCompletion = _step.done;\n            _context.next = 13;\n            return _step.value;\n\n          case 13:\n            _value = _context.sent;\n\n            if (_iteratorNormalCompletion) {\n              _context.next = 62;\n              break;\n            }\n\n            file = _value;\n            headers = {};\n\n            if (file.mtime !== undefined && file.mtime !== null) {\n              mtime = mtimeToObject(file.mtime);\n\n              if (mtime) {\n                headers.mtime = mtime.secs;\n                headers['mtime-nsecs'] = mtime.nsecs;\n              }\n            }\n\n            if (file.mode !== undefined && file.mode !== null) {\n              headers.mode = file.mode.toString(8).padStart(4, '0');\n            }\n\n            if (!file.content) {\n              _context.next = 57;\n              break;\n            }\n\n            // In the browser there's _currently_ no streaming upload, buffer up our\n            // async iterator chunks and append a big Blob :(\n            // One day, this will be browser streams\n            bufs = [];\n            _iteratorNormalCompletion2 = true;\n            _didIteratorError2 = false;\n            _context.prev = 23;\n            _iterator2 = _asyncIterator(file.content);\n\n          case 25:\n            _context.next = 27;\n            return _iterator2.next();\n\n          case 27:\n            _step2 = _context.sent;\n            _iteratorNormalCompletion2 = _step2.done;\n            _context.next = 31;\n            return _step2.value;\n\n          case 31:\n            _value2 = _context.sent;\n\n            if (_iteratorNormalCompletion2) {\n              _context.next = 38;\n              break;\n            }\n\n            chunk = _value2;\n            bufs.push(chunk);\n\n          case 35:\n            _iteratorNormalCompletion2 = true;\n            _context.next = 25;\n            break;\n\n          case 38:\n            _context.next = 44;\n            break;\n\n          case 40:\n            _context.prev = 40;\n            _context.t0 = _context[\"catch\"](23);\n            _didIteratorError2 = true;\n            _iteratorError2 = _context.t0;\n\n          case 44:\n            _context.prev = 44;\n            _context.prev = 45;\n\n            if (!(!_iteratorNormalCompletion2 && _iterator2.return != null)) {\n              _context.next = 49;\n              break;\n            }\n\n            _context.next = 49;\n            return _iterator2.return();\n\n          case 49:\n            _context.prev = 49;\n\n            if (!_didIteratorError2) {\n              _context.next = 52;\n              break;\n            }\n\n            throw _iteratorError2;\n\n          case 52:\n            return _context.finish(49);\n\n          case 53:\n            return _context.finish(44);\n\n          case 54:\n            formData.append(\"file-\".concat(i), new Blob(bufs, {\n              type: 'application/octet-stream'\n            }), encodeURIComponent(file.path), {\n              header: headers\n            });\n            _context.next = 58;\n            break;\n\n          case 57:\n            formData.append(\"dir-\".concat(i), new Blob([], {\n              type: 'application/x-directory'\n            }), encodeURIComponent(file.path), {\n              header: headers\n            });\n\n          case 58:\n            i++;\n\n          case 59:\n            _iteratorNormalCompletion = true;\n            _context.next = 7;\n            break;\n\n          case 62:\n            _context.next = 68;\n            break;\n\n          case 64:\n            _context.prev = 64;\n            _context.t1 = _context[\"catch\"](5);\n            _didIteratorError = true;\n            _iteratorError = _context.t1;\n\n          case 68:\n            _context.prev = 68;\n            _context.prev = 69;\n\n            if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n              _context.next = 73;\n              break;\n            }\n\n            _context.next = 73;\n            return _iterator.return();\n\n          case 73:\n            _context.prev = 73;\n\n            if (!_didIteratorError) {\n              _context.next = 76;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 76:\n            return _context.finish(73);\n\n          case 77:\n            return _context.finish(68);\n\n          case 78:\n            return _context.abrupt(\"return\", formData);\n\n          case 79:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[5, 64, 68, 78], [23, 40, 44, 54], [45,, 49, 53], [69,, 73, 77]]);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"script"}