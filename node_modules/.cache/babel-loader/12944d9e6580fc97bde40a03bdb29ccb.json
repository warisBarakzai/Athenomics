{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/wbarakzai/Documents/1.Spring20/Athenomics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/wbarakzai/Documents/1.Spring20/Athenomics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar configure = require('../lib/configure');\n\nvar encodeBuffer = require('../lib/encode-buffer-uri-component');\n\nmodule.exports = configure(function (_ref) {\n  var ky = _ref.ky;\n  return (/*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(topic, data, options) {\n        var searchParams, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = options || {};\n                data = Buffer.from(data);\n                searchParams = new URLSearchParams(options.searchParams);\n                searchParams.set('arg', topic);\n                _context.next = 6;\n                return ky.post(\"pubsub/pub?\".concat(searchParams, \"&arg=\").concat(encodeBuffer(data)), {\n                  timeout: options.timeout,\n                  signal: options.signal,\n                  headers: options.headers\n                }).text();\n\n              case 6:\n                res = _context.sent;\n                return _context.abrupt(\"return\", res);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2, _x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n});","map":null,"metadata":{},"sourceType":"script"}