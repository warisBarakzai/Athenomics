{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/wbarakzai/Documents/1.Spring20/Athenomics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _awaitAsyncGenerator = require(\"/Users/wbarakzai/Documents/1.Spring20/Athenomics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/Users/wbarakzai/Documents/1.Spring20/Athenomics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar _asyncIterator = require(\"/Users/wbarakzai/Documents/1.Spring20/Athenomics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nvar ndjson = require('iterable-ndjson');\n\nvar Big = require('bignumber.js');\n\nvar configure = require('../lib/configure');\n\nvar toIterable = require('stream-to-it/source');\n\nmodule.exports = configure(function (_ref) {\n  var ky = _ref.ky;\n  return (/*#__PURE__*/function () {\n      var _bw = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(options) {\n        var searchParams, res, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, stats;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = options || {};\n                searchParams = new URLSearchParams(options.searchParams);\n                if (options.interval) searchParams.set('interval', options.interval);\n                if (options.peer) searchParams.set('peer', options.peer);\n                if (options.poll != null) searchParams.set('poll', options.poll);\n                if (options.proto) searchParams.set('proto', options.proto);\n                _context.next = 8;\n                return _awaitAsyncGenerator(ky.post('stats/bw', {\n                  timeout: options.timeout,\n                  signal: options.signal,\n                  headers: options.headers,\n                  searchParams: searchParams\n                }));\n\n              case 8:\n                res = _context.sent;\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _context.prev = 11;\n                _iterator = _asyncIterator(ndjson(toIterable(res.body)));\n\n              case 13:\n                _context.next = 15;\n                return _awaitAsyncGenerator(_iterator.next());\n\n              case 15:\n                _step = _context.sent;\n                _iteratorNormalCompletion = _step.done;\n                _context.next = 19;\n                return _awaitAsyncGenerator(_step.value);\n\n              case 19:\n                _value = _context.sent;\n\n                if (_iteratorNormalCompletion) {\n                  _context.next = 27;\n                  break;\n                }\n\n                stats = _value;\n                _context.next = 24;\n                return {\n                  totalIn: new Big(stats.TotalIn),\n                  totalOut: new Big(stats.TotalOut),\n                  rateIn: new Big(stats.RateIn),\n                  rateOut: new Big(stats.RateOut)\n                };\n\n              case 24:\n                _iteratorNormalCompletion = true;\n                _context.next = 13;\n                break;\n\n              case 27:\n                _context.next = 33;\n                break;\n\n              case 29:\n                _context.prev = 29;\n                _context.t0 = _context[\"catch\"](11);\n                _didIteratorError = true;\n                _iteratorError = _context.t0;\n\n              case 33:\n                _context.prev = 33;\n                _context.prev = 34;\n\n                if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n                  _context.next = 38;\n                  break;\n                }\n\n                _context.next = 38;\n                return _awaitAsyncGenerator(_iterator.return());\n\n              case 38:\n                _context.prev = 38;\n\n                if (!_didIteratorError) {\n                  _context.next = 41;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 41:\n                return _context.finish(38);\n\n              case 42:\n                return _context.finish(33);\n\n              case 43:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[11, 29, 33, 43], [34,, 38, 42]]);\n      }));\n\n      function bw(_x) {\n        return _bw.apply(this, arguments);\n      }\n\n      return bw;\n    }()\n  );\n});","map":null,"metadata":{},"sourceType":"script"}