{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/wbarakzai/Documents/1.Spring20/Athenomics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _awaitAsyncGenerator = require(\"/Users/wbarakzai/Documents/1.Spring20/Athenomics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/Users/wbarakzai/Documents/1.Spring20/Athenomics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar _require = require('ky-universal'),\n    ky = _require.default;\n\nvar toIterable = require('stream-to-it/source');\n\nmodule.exports = /*#__PURE__*/function () {\n  var _urlSource = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url, options) {\n    var _ref, body;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = options || {};\n            _context.next = 3;\n            return _awaitAsyncGenerator(ky.get(url));\n\n          case 3:\n            _ref = _context.sent;\n            body = _ref.body;\n            _context.next = 7;\n            return {\n              path: decodeURIComponent(new URL(url).pathname.split('/').pop() || ''),\n              content: toIterable(body)\n            };\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  function urlSource(_x, _x2) {\n    return _urlSource.apply(this, arguments);\n  }\n\n  return urlSource;\n}();","map":null,"metadata":{},"sourceType":"script"}