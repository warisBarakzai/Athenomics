{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/wbarakzai/Documents/1.Spring20/Athenomics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _awaitAsyncGenerator = require(\"/Users/wbarakzai/Documents/1.Spring20/Athenomics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/Users/wbarakzai/Documents/1.Spring20/Athenomics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar _asyncIterator = require(\"/Users/wbarakzai/Documents/1.Spring20/Athenomics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nvar CID = require('cids');\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar configure = require('./lib/configure');\n\nvar toIterable = require('stream-to-it/source');\n\nmodule.exports = configure(function (_ref) {\n  var ky = _ref.ky;\n  return (/*#__PURE__*/function () {\n      var _cat = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(path, options) {\n        var searchParams, res, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, chunk;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = options || {};\n                searchParams = new URLSearchParams(options.searchParams);\n\n                if (typeof path === 'string') {\n                  searchParams.set('arg', path);\n                } else {\n                  searchParams.set('arg', new CID(path).toString());\n                }\n\n                if (options.offset) searchParams.set('offset', options.offset);\n                if (options.length) searchParams.set('length', options.length);\n                _context.next = 7;\n                return _awaitAsyncGenerator(ky.post('cat', {\n                  timeout: options.timeout,\n                  signal: options.signal,\n                  headers: options.headers,\n                  searchParams: searchParams\n                }));\n\n              case 7:\n                res = _context.sent;\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _context.prev = 10;\n                _iterator = _asyncIterator(toIterable(res.body));\n\n              case 12:\n                _context.next = 14;\n                return _awaitAsyncGenerator(_iterator.next());\n\n              case 14:\n                _step = _context.sent;\n                _iteratorNormalCompletion = _step.done;\n                _context.next = 18;\n                return _awaitAsyncGenerator(_step.value);\n\n              case 18:\n                _value = _context.sent;\n\n                if (_iteratorNormalCompletion) {\n                  _context.next = 26;\n                  break;\n                }\n\n                chunk = _value;\n                _context.next = 23;\n                return Buffer.from(chunk);\n\n              case 23:\n                _iteratorNormalCompletion = true;\n                _context.next = 12;\n                break;\n\n              case 26:\n                _context.next = 32;\n                break;\n\n              case 28:\n                _context.prev = 28;\n                _context.t0 = _context[\"catch\"](10);\n                _didIteratorError = true;\n                _iteratorError = _context.t0;\n\n              case 32:\n                _context.prev = 32;\n                _context.prev = 33;\n\n                if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n                  _context.next = 37;\n                  break;\n                }\n\n                _context.next = 37;\n                return _awaitAsyncGenerator(_iterator.return());\n\n              case 37:\n                _context.prev = 37;\n\n                if (!_didIteratorError) {\n                  _context.next = 40;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 40:\n                return _context.finish(37);\n\n              case 41:\n                return _context.finish(32);\n\n              case 42:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[10, 28, 32, 42], [33,, 37, 41]]);\n      }));\n\n      function cat(_x, _x2) {\n        return _cat.apply(this, arguments);\n      }\n\n      return cat;\n    }()\n  );\n});","map":null,"metadata":{},"sourceType":"script"}