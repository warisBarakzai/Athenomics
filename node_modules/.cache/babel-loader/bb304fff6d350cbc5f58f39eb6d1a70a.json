{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/wbarakzai/Documents/1.Spring20/Athenomics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _awaitAsyncGenerator = require(\"/Users/wbarakzai/Documents/1.Spring20/Athenomics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/Users/wbarakzai/Documents/1.Spring20/Athenomics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar _asyncIterator = require(\"/Users/wbarakzai/Documents/1.Spring20/Athenomics/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nvar ndjson = require('iterable-ndjson');\n\nvar configure = require('../lib/configure');\n\nvar toIterable = require('stream-to-it/source');\n\nmodule.exports = configure(function (_ref2) {\n  var ky = _ref2.ky;\n  return (/*#__PURE__*/function () {\n      var _ref = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(path, options) {\n        var searchParams, res, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, result;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = options || {};\n                searchParams = new URLSearchParams(options.searchParams);\n                searchParams.set('arg', path);\n                searchParams.set('stream', options.stream == null ? true : options.stream);\n                if (options.dhtRecordCount != null) searchParams.set('dht-record-count', options.dhtRecordCount);\n                if (options.dhtTimeout != null) searchParams.set('dht-timeout', options.dhtTimeout);\n                if (options.noCache != null) searchParams.set('nocache', options.noCache);\n                if (options.recursive != null) searchParams.set('recursive', options.recursive);\n                _context.next = 10;\n                return _awaitAsyncGenerator(ky.post('name/resolve', {\n                  timeout: options.timeout,\n                  signal: options.signal,\n                  headers: options.headers,\n                  searchParams: searchParams\n                }));\n\n              case 10:\n                res = _context.sent;\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _context.prev = 13;\n                _iterator = _asyncIterator(ndjson(toIterable(res.body)));\n\n              case 15:\n                _context.next = 17;\n                return _awaitAsyncGenerator(_iterator.next());\n\n              case 17:\n                _step = _context.sent;\n                _iteratorNormalCompletion = _step.done;\n                _context.next = 21;\n                return _awaitAsyncGenerator(_step.value);\n\n              case 21:\n                _value = _context.sent;\n\n                if (_iteratorNormalCompletion) {\n                  _context.next = 29;\n                  break;\n                }\n\n                result = _value;\n                _context.next = 26;\n                return result.Path;\n\n              case 26:\n                _iteratorNormalCompletion = true;\n                _context.next = 15;\n                break;\n\n              case 29:\n                _context.next = 35;\n                break;\n\n              case 31:\n                _context.prev = 31;\n                _context.t0 = _context[\"catch\"](13);\n                _didIteratorError = true;\n                _iteratorError = _context.t0;\n\n              case 35:\n                _context.prev = 35;\n                _context.prev = 36;\n\n                if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n                  _context.next = 40;\n                  break;\n                }\n\n                _context.next = 40;\n                return _awaitAsyncGenerator(_iterator.return());\n\n              case 40:\n                _context.prev = 40;\n\n                if (!_didIteratorError) {\n                  _context.next = 43;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 43:\n                return _context.finish(40);\n\n              case 44:\n                return _context.finish(35);\n\n              case 45:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[13, 31, 35, 45], [36,, 40, 44]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n});","map":null,"metadata":{},"sourceType":"script"}