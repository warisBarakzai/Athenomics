{"version":3,"sources":["components/NavBar.js","components/OpenRequests.js","components/PendingRequests.js","components/Register.js","components/App.js","serviceWorker.js","index.js","components/Home.js","components/ipfs.js"],"names":["NavBar","react_default","a","createElement","className","id","react_router_dom","to","this","props","account","Component","OpenRequests","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","acceptOffer","_ref","asyncToGenerator","regenerator_default","mark","_callee","event","owned_genomes_update","index","mem_address","i","wrap","_context","prev","next","contract","console","log","abrupt","state","owned_genomes","parseInt","target","value","methods","changeRequest","send","from","length","setState","forceUpdate","stop","_x","apply","arguments","rejectOffer","_ref2","_callee2","_context2","then","r","_x2","updateTable","genomesCount","genomes","testGenome","owner","requests_status","getGenomeRequests","requests_all","j","address","getGenomeRequestStatus","status","getMemberName","name","push","toNumber","requests","source_type","map_array","_i","_Object$entries","entries","genome_index","mem_address_array","mem_name","disabled","key","toString","onClick","onChange","scope","renderTableData","PendingRequests","handleClick","pending_requests_update","pending_requests","completeTransaction","_callee3","genome_address","seq","_context3","getGenomeOwner","sent","returnSeq","window","open","focus","web3","eth","sendTransaction","utils","toWei","_ref3","e","result","_seq","alert","_x3","_x4","pending_update","message","Register","handleSubmit","institution_name","preventDefault","addMember","class","onSubmit","type","captureSource","bind","placeholder","App","loading","loadWeb3","loadBlockchainData","ethereum","Web3","enable","currentProvider","getAccounts","accounts","net","getId","networkId","networkData","Athenomics","networks","Contract","abi","_this2","src_components_NavBar","react_router","exact","path","render","Home","assign","src_components_OpenRequests","src_components_PendingRequests","src_components_Register","Boolean","location","hostname","match","ReactDOM","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","_Users_wbarakzai_Documents_1_Spring20_Athenomics_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Users_wbarakzai_Documents_1_Spring20_Athenomics_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_wbarakzai_Documents_1_Spring20_Athenomics_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","captureFile","file","files","split","style","visibility","reader","FileReader","readAsArrayBuffer","onloadend","buffer","Buffer","source","ipfs","add","error","addGenome","hash","_Users_wbarakzai_Documents_1_Spring20_Athenomics_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_wbarakzai_Documents_1_Spring20_Athenomics_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","genomeExists","memberExists","innerText","checkGenomeRequestExists","checkMemberExists","addRequest","ipfshash","genomes_update","map","genome","react__WEBPACK_IMPORTED_MODULE_7___default","role","href","rel","src","alt","htmlFor","require","host","port","protocol"],"mappings":"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","file":"static/js/main.2f0b6705.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './NavBar.css'\nimport {Link} from 'react-router-dom';\n\nclass NavBar extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<nav className=\"navbar navbar-expand-lg navbar-dark \" id='navbar1'>\n\t\t\t\t<ul className=\"navbar-nav col-md-2 col-md-1 mr-0\">\n\t\t\t\t\t<li className='nav-item'><Link to='/'>Athenomics</Link></li>\n\n\t\t\t\t</ul>\n\t\t\t\t<ul className=\"navbar-nav col-md-2 col-md-1 mr-1\">\n\t\t\t\t\t<li className='nav-item'><Link to='/OpenRequests'>Genome Requests</Link></li>\n\t\t\t\t</ul>\n\t\t\t\t<ul className=\"navbar-nav col-md-2 col-md-1 mr-1\">\n\t\t\t\t\t<li className='nav-item'><Link to='/PendingRequests'>Requested Status</Link></li>\n\t\t\t\t</ul>\n\t\t\t\t<ul className=\"navbar-nav col-md-2 col-md-1 mr-1\">\n\t\t\t\t\t<li className='nav-item'><Link to='/Register'>Register</Link></li>\n\t\t\t\t</ul>\n\n        <ul className=\"navbar-nav px-2\">\n          <li className=\"nav-item text-nowrap d-none d-sm-nonee d-sm-block\">\n            <small className=\"text-black\">{this.props.account}</small>\n          </li>\n        </ul>\n\t\t\t</nav> \n\t\t)\n\t}\n}\n\nexport default NavBar","import React, { Component } from 'react';\nimport './OpenRequests.css'\n\n\nclass OpenRequests extends Component {\n\n\tconstructor(props){\n    super(props);\n    this.state = {\n      owned_genomes: {},\n    }\n  }\n\n\tasync componentWillMount() {\n    await this.updateTable()\n  }\n\n  async updateTable() {\n    if(!this.props.contract){\n      console.log('No Contract Connected!')\n      return\n    }\n    var owned_genomes_update = {}\n    const genomesCount = await this.props.contract.methods.genomesCount().call()\n    for(var i=1; i <= genomesCount; ++i){\n      const testGenome = await this.props.contract.methods.genomes(i).call()\n      if(testGenome.owner === this.props.account){\n      \tvar requests_status = [];\n      \tconst requests_all = await this.props.contract.methods.getGenomeRequests(testGenome.index).call()\n      \tfor(var j = 0; j < requests_all.length; ++j){\n      \t\tconst address = requests_all[j]\n      \t\tconst status = await this.props.contract.methods.getGenomeRequestStatus(testGenome.index, address).call()\n      \t\tconst name = await this.props.contract.methods.getMemberName(address).call()\n      \t\trequests_status.push([address, status.toNumber(), name])\n      \t}\n      \towned_genomes_update[testGenome.index.toNumber()] = {\n      \t\trequests: requests_status,\n      \t\tsource_type: testGenome.source_type\n      \t}\n      }\n    }\n    this.setState({ owned_genomes: owned_genomes_update })\n    this.forceUpdate()\n  }\n\n  acceptOffer = async event =>{\n    if(!this.props.contract){\n      console.log('No Contract Connected')\n      return\n    }\n    var owned_genomes_update = this.state.owned_genomes\n    const index = parseInt(event.target.id)\n    const mem_address = event.target.value\n    await this.props.contract.methods.changeRequest(index, mem_address, 3).send({from: this.props.account})\n    for(var i = 0; i < this.state.owned_genomes[index]['requests'].length; ++i){\n    \tif(this.state.owned_genomes['requests'][i][0] === mem_address){\n    \t\towned_genomes_update[index]['requests'][i][2]=2\n    \t}\n    }\n    this.setState({owned_genomes: owned_genomes_update})\n    this.forceUpdate()\n  }\n\n  rejectOffer = async event =>{\n    if(!this.props.contract){\n      return\n    }\n    var owned_genomes_update = this.state.owned_genomes\n    const index = parseInt(event.target.id)\n    const mem_address = event.target.value\n    await this.props.contract.methods.changeRequest(index, mem_address, 1).send({from: this.props.account}).then((r)=>{\n      console.log(r)\n    })\n    for(var i = 0; i < this.state.owned_genomes[index]['requests'].length; ++i){\n    \tif(this.state.owned_genomes['requests'][i][0] === mem_address){\n    \t\towned_genomes_update[index]['requests'][i][2]=0\n    \t}\n    }\n    this.setState({owned_genomes: owned_genomes_update})\n    this.forceUpdate()\n  }\n\n  renderTableData() {\n  \tvar map_array = []\n  \tfor(const entries of Object.entries(this.state.owned_genomes)){\n  \t\tconst genome_index = parseInt(entries[0])\n  \t\tconst mem_address_array = entries[1]['requests']\n  \t\tconst source_type = entries[1]['source_type']\n  \t\tfor(var i = 0; i < mem_address_array.length; ++i){\n  \t\t\tconst mem_address = mem_address_array[i][0]\n  \t\t\tconst status = mem_address_array[i][1]\n  \t\t\tconst mem_name = mem_address_array[i][2]\n  \t\t\tvar disabled = true\n  \t\t\tif(status === 2){\n  \t\t\t\tdisabled = false\n  \t\t\t} \n  \t\t\tif(disabled === true && status !== 4) {\n  \t\t\t\tmap_array.push(\n\t  \t\t\t\t<tr key={genome_index.toString() + '.' + i.toString()}>\n\t\t          <td id={genome_index}> {genome_index} </td>\n\t\t          <td key={source_type}> {source_type}</td>\n\t\t          <td key={mem_address}>{mem_name} ({mem_address})</td>\n\t\t          <td> <button className=\"btn btn-dark\" id={genome_index} value={mem_address} onClick={this.acceptOffer} disabled>Accept</button> </td>\n\t\t          <td><button className=\"btn btn-dark\" id={genome_index} value={mem_address} onClick={this.rejectOffer} disabled>Reject</button> </td>\n\t\t          <td>Pending Response from Member</td>\n\t\t        </tr>\n\t  \t\t\t)\n  \t\t\t} else if (status !== 4) {\n  \t\t\t\tmap_array.push(\n\t  \t\t\t\t<tr key={genome_index.toString() + '.' + i.toString()}>\n\t\t          <td id={genome_index}> {genome_index} </td>\n\t\t          <td key={source_type}> {source_type}</td>\n\t\t          <td key={mem_address}>{mem_name} ({mem_address})</td>\n\t\t          <td> <button className=\"btn btn-dark\" id={genome_index} value={mem_address} onClick={this.acceptOffer}>Accept</button></td>\n\t\t          <td> <button className=\"btn btn-dark\" id={genome_index} value={mem_address} onClick={this.rejectOffer}>Reject</button> </td>\n\t\t          <td>Please Respond</td>\n\t\t        </tr>\n\t  \t\t\t)\n  \t\t\t}\n  \t\t}\n  \t}\n  \treturn map_array\n  }\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"container-fluid mt-6\">\n          <h1 id='title1'>Open Requests</h1>\n          <table id='genome_requests' className=\"table table-hover table-bordered\" onChange={this.updateTable}>\n            <thead className='thead-dark'>\n              <tr>\n                <th scope=\"col\">Genome Index</th>\n                <th scope=\"col\">Source Type</th>\n                <th scope=\"col\">Member</th>\n                <th scope=\"col\">Accept</th>\n                <th scope=\"col\">Reject</th>\n                <th scope=\"col\">Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.renderTableData()}\n            </tbody>\n          </table>\n        </div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default OpenRequests;","import React, { Component } from 'react';\nimport './PendingRequests.css';\n\n\nclass PendingRequests extends Component {\n\n// 1 rejected 2 pending 3 approved 4 completed\n\tconstructor(props){\n    super(props);\n    this.state = {\n      pending_requests: {},\n    }\n  }\n\n\tasync componentWillMount() {\n    await this.updateTable()\n  }\n\n  async updateTable() {\n    if(!this.props.contract){\n      console.log('No Contract Connected!')\n      return\n    }\n    var pending_update = {}\n    const genomesCount = await this.props.contract.methods.genomesCount().call()\n    for(var i=1; i <= genomesCount; ++i){\n      try{\n        const status = await this.props.contract.methods.getGenomeRequestStatus(i, this.props.account).call()\n        pending_update[i] = status.toNumber()\n      } catch {\n        continue\n      }\n    }\n    this.setState({ pending_requests: pending_update })\n\n  }\n\n  handleClick = async event =>{\n    // event.target.style.visibility = 'hidden'\n    const index = event.target.id\n    const mem_address = this.props.account\n    var pending_requests_update = this.state.pending_requests\n    console.log(this.state.pending_requests)\n    console.log(index, mem_address)\n    await this.props.contract.methods.changeRequest(index, mem_address,0).send({from: this.props.account}).then((r)=>{\n      console.log(r)\n    })\n    pending_requests_update[index] = 0\n    console.log('deleted')\n    this.setState({pending_requests: pending_requests_update})\n    this.forceUpdate()\n\n  }\n\n  completeTransaction = async event =>{\n    let contract = this.props.contract\n    let account = this.props.account\n    const genome_index = event.target.id\n    const status = parseInt(event.target.value)\n    const genome_address = await this.props.contract.methods.getGenomeOwner(genome_index).call()\n    if(status === 4){\n      const seq = await contract.methods.returnSeq(genome_index).call()\n      var win = window.open('https://ipfs.infura.io/ipfs/' + seq, '_blank')\n      win.focus()\n    } else {\n      window.web3.eth.sendTransaction(\n        {\n          from: this.props.account,\n          to: genome_address,  \n          value: window.web3.utils.toWei(\"0.0003\", \"ether\")\n        },\n        async function(e, result){ \n          if(e){\n            window.alert('Transaction failed, please retry or delete')\n            console.log(e)\n          } else {  \n            const seq = await contract.methods.returnSeq(genome_index).call()\n            var win = window.open('https://ipfs.infura.io/ipfs/' + seq, '_blank')\n            win.focus()\n            await contract.methods.changeRequest(genome_index, account, 4).send({from: account})\n          }\n        }\n      )\n    }\n    // download from hash and delete transaction   \n  }\n\n  renderTableData() {\n    var map_array = []\n  \t\n  \tfor(const entries of Object.entries(this.state.pending_requests)){\n      const genome_index = entries[0]\n      const status = entries[1]\n      var disabled = true\n      var message = 'Pending'\n      if(status === 3) { \n        disabled = false\n        message = 'Complete'\n      } else if (status === 1){\n        message = 'Rejected'\n      } else if (status === 4) {\n        disabled = false\n        message = 'Redownload'\n      }\n      if(status !== 0){\n  \t\t\tmap_array.push(\n  \t\t\t\t<tr id={genome_index} key={genome_index}>\n            <td id={genome_index}> {entries[0]} </td>\n            <td>  <button className=\"btn btn-dark\"\n                    id={genome_index} value={status} onClick={this.completeTransaction} \n                    disabled={disabled}>\n                    {message}\n                  </button> \n            </td>\n            <td>\n                <button className=\"btn btn-dark\" id={genome_index} \n                value={status} onClick={this.handleClick}>\n                    Delete\n                </button> \n            </td>\n          </tr>\n  \t\t\t)\n      }\n  \t}\n    return map_array\n  }\n\n\trender() {\n\t\treturn (\n      <div className=\"container\">\n        <div className=\"container-fluid mt-6\">\n          <h1 id='title2'>Pending Requests</h1>\n          <table id='genome_requests' className=\"table table-hover table-bordered\" onChange={this.updateTable}>\n            <thead className='thead-dark'>\n              <tr>\n                <th scope=\"col\">Genome Index</th>\n                <th scope=\"col\">Status</th>\n                <th scope='col'> Delete </th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.renderTableData()}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    )\n\t}\n}\n\nexport default PendingRequests;","import React, { Component } from 'react';\nimport './Register.css'\n\n\nclass Register extends Component {\n\n\tconstructor(props){\n    super(props);\n    this.state = {\n      institution_name:'',\n    }\n  }\n\n   handleSubmit = async event => {\n    if(!this.props.contract){\n      console.log('No Contract Connected!')\n      return\n    }\n    event.preventDefault()\n    var institution_name = this.state.institution_name\n    await this.props.contract.methods.addMember(institution_name).send({from: this.props.account}).then((r)=>{\n        console.log(r)        \n      })\n  }\n  captureSource(event){\n    event.preventDefault()\n    this.setState({institution_name:event.target.value})\n  }\n\n\n\trender() {\n\t\treturn (\n     <div className=\"SearchBar\">\n        <h1>Registration</h1>\n      <div className=\"row\">\n      <div className=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\n        <div className=\"card card-signin my-5\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title text-center\">Institution Name</h5>\n            <form class=\"form-signin\" id='register' onSubmit={this.handleSubmit}>\n            <input type='text'  className=\"form-control\" onChange={this.captureSource.bind(this)} placeholder=\"Enter Name\"/>          \n            <button class=\"btn btn-lg btn-primary btn-block text-uppercase\" type=\"submit\">Register</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n      </div>\n\n\t\t)\n\t}\n}\n\nexport default Register;","import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Athenomics from './../abi/Athenomics.json';\nimport Home from './Home';\nimport NavBar from './NavBar';\nimport OpenRequests from './OpenRequests';\nimport PendingRequests from './PendingRequests';\nimport Register from './Register';\n\nimport {Route} from 'react-router-dom';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      loading: true,\n      account: '',\n      contract: null,\n    }\n  }\n\n  async componentDidMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n    this.setState({ loading: false }) \n  }\n\n  // Get the account\n  // Get the network\n  // Get Smart Contract\n  // --> ABI: Athenomics.abi\n  // --> Address: networkData.address\n  // Get Genomic Hash\n\n  async loadWeb3() {\n    if(window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    } else {\n      window.alert(\"Please use MetaMask\");\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n    const accounts = await web3.eth.getAccounts()\n    this.setState({account: accounts[0]})\n    const networkId = await web3.eth.net.getId()\n    const networkData = Athenomics.networks[networkId]\n    if(networkData) {\n      // Fetch Contract\n      const contract = web3.eth.Contract(Athenomics.abi, networkData.address)\n      this.setState({ contract: contract })   \n    } else {\n      window.alert('Smart contract not deployed')\n    }\n  }\n\n  render() {\n    if(this.state.loading===true){\n      return(\n        <h2>\n          Initializing (If this hangs, there may be an issue with MetaMask)...\n        </h2>\n      )\n    }\n    return (\n      <div className=\"App\">\n        <NavBar account={this.state.account}/>\n        <Route exact path=\"/\" \n          render={(props) => <Home {...props} \n          account={this.state.account} \n          contract={this.state.contract}/>}\n        />\n        <Route exact path=\"/OpenRequests\" \n          render={(props) => <OpenRequests {...props} \n          account={this.state.account} \n          contract={this.state.contract}/>}\n        />\n        <Route exact path=\"/PendingRequests\" \n          render={(props) => <PendingRequests {...props} \n          account={this.state.account} \n          contract={this.state.contract}/>}\n        />\n        <Route exact path=\"/Register\" \n          render={(props) => <Register {...props} \n          account={this.state.account} \n          contract={this.state.contract}/>}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<App />\n\t</BrowserRouter>,\n\tdocument.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react';\nimport ipfs from './ipfs';\nimport './Home.css'\n\nclass Home extends Component {\n\n  async componentWillMount() {\n    await this.updateTable()\n  }\n\n  constructor(props){\n    super(props);\n    this.state = {\n      buffer: null,\n      source: null,\n      genomes: [],\n      ipfshash:''\n    }\n  }\n\n  captureFile = (event) =>{\n    event.preventDefault();\n\n    // process file for IPFS\n\n    const file = event.target.files[0];\n    const extension = file.name.split('.')[2];\n    // var executablePath = \"/Users/dr/Desktop/Athenomics/geco-master/src/GeCo.exe\";\n    // var parameter1 = ['5']\n    // var parameter2 = [\"-l\"];\n    // var execFile = require('child_process').execFile, child;\n    // var exec = require('child_process').execFile;\n    //extension !== 'fasta' && extension !== 'fa'&& \n    if(extension !== 'co' ){\n      window.alert('File type incorrect, please download and compress your file using the provided algorithm!')\n      document.getElementById('githublink').style.visibility = 'visible'\n\n      return;\n    }\n    const reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n    reader.onloadend  = () => {\n      this.setState({ buffer: Buffer(reader.result) })\n    }\n  }\n\n  captureSource = (event) => {\n    event.preventDefault()\n    this.setState({source: event.target.value})\n  }\n\n  onSubmit = (event) => {\n    if(!this.props.contract){\n      console.log('No Contract Connected!')\n      return\n    }\n    event.preventDefault()\n    console.log(\"Submitting file to ipfs...\")\n    ipfs.add(this.state.buffer, (error, result) => {\n      if(error) {\n        console.error(error)\n        return\n      }\n      this.props.contract.methods.addGenome(result[0].hash, this.state.source).send({from: this.props.account}).then((r)=>{\n        console.log(r)        \n      })\n\n    })\n  }\n\n  async updateTable() {\n    if(!this.props.contract){\n      console.log('No Contract Connected!')\n      return\n    }\n    var genomes_update = []\n    const genomesCount = await this.props.contract.methods.genomesCount().call()\n    for(var i=1; i <= genomesCount; ++i){\n      const testGenome = await this.props.contract.methods.genomes(i).call()\n      genomes_update.push(testGenome);\n    }\n    this.setState({genomes: genomes_update})\n    this.forceUpdate()\n  }\n\n  handleClick = async event =>{\n    if(!this.props.contract){\n      console.log('No Contract Connected')\n      return\n    }\n    var index = parseInt(event.target.innerText)\n    var genomeExists = \n        await this.props.contract.methods.checkGenomeRequestExists(index, this.props.account).call()\n    genomeExists = genomeExists.toNumber()\n    const memberExists = \n        await this.props.contract.methods.checkMemberExists(this.props.account).call()\n    if(this.props.account === this.state.genomes[index-1].owner) {\n      window.alert('Cannot Request Owned Genome!')\n      return\n    } else if (genomeExists === 1 || genomeExists === 2 || genomeExists === 3 || genomeExists === 4) {\n      window.alert('Open Request for this sample already exists')\n      return\n    } else if(memberExists === false) {\n      window.alert('Must Register Before Requesting Genomes')\n      return\n    }\n    await this.props.contract.methods.addRequest(index).send({from: this.props.account}).then((r)=>{\n      console.log(r)\n    })\n    this.forceUpdate()\n  }\n\n  renderTableData() {\n    return this.state.genomes.map((genome, index) => {\n      return (\n        <tr key={genome.index.toNumber()}>\n          <td id={genome.index}> {genome.index.toNumber()} </td>\n          <td key={genome.owner} >{genome.owner}</td>\n          <td key={genome.source_type} >{genome.source_type}</td>\n          <td> <button className=\"btn btn-dark\">{genome.index.toNumber()} </button> </td>\n        </tr>\n      )\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"container-fluid mt-3\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\n              <div className=\"content mr-auto ml-auto\" id='div1'>\n                <a\n                  href=\"./\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <img src={'https://ipfs.io/ipfs/QmRaVYPnxSoXbxV6xom6Hhv3jsKvDCa1MRRKVEt8MbTRrD'} className=\"App-logo\" alt=\"logo\" />\n                </a>\n                <h2> Add Genome </h2>\n                <a id=\"githublink\" href='https://github.com/cobilab/geco'> Compression Algorithm </a>\n\n                <form className='form1' onSubmit={this.onSubmit} >\n                  <input type='file' onChange={this.captureFile} />\n                  <label htmlFor=\"sourceType\">Source</label>\n                  <input type=\"text\" id=\"source\" placeholder=\"Enter source\" onChange={this.captureSource}/>\n                  <input type='submit'/>\n                </form>  \n              </div>\n            </main>\n          </div>\n        </div>\n\n\n        <div className=\"container-fluid mt-6\">\n          <h1 id='title'>Publically Available Genomes</h1>\n\n          <table id='genomes' className=\"table table-hover table-bordered table-striped\" onChange={this.updateTable}>\n            <thead className='thead-dark'>\n              <tr>\n                <th scope=\"col\">Index</th>\n                <th scope=\"col\">Owner</th>\n                <th scope=\"col\">Source Type</th>\n                <th scope=\"col\">button</th>\n                \n              </tr>\n            </thead>\n\n            <tbody onClick={this.handleClick}>\n              {this.renderTableData()}\n            </tbody>\n          </table>\n        </div>\n\n      </div>\n\n\n    );\n  }\n}\n\nexport default Home;\n","const IPFS = require('ipfs-http-client');\nconst ipfs = new IPFS({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\n\nexport default ipfs;"],"sourceRoot":""}