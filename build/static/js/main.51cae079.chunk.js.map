{"version":3,"sources":["components/modal/index.js","components/NavBar.js","components/OpenRequests.js","components/PendingRequests.js","components/Register.js","components/App.js","serviceWorker.js","index.js","components/Home.js","components/ipfs.js","components/logo.png"],"names":["Component","NavBar","react_default","a","createElement","className","id","react_router_dom","to","this","props","account","OpenRequests","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","acceptOffer","_ref","asyncToGenerator","regenerator_default","mark","_callee","event","owned_genomes_update","index","mem_address","i","wrap","_context","prev","next","contract","console","log","abrupt","state","owned_genomes","parseInt","target","value","methods","changeRequest","send","from","length","setState","stop","_x","apply","arguments","rejectOffer","_ref2","_callee2","_context2","then","r","_x2","updateTable","genomesCount","genomes","testGenome","owner","requests_status","getGenomeRequests","requests_all","j","address","getGenomeRequestStatus","status","getMemberName","name","push","toNumber","requests","source_type","map_array","_i","_Object$entries","entries","genome_index","mem_address_array","mem_name","disabled","key","toString","onClick","onChange","scope","renderTableData","PendingRequests","completeTransaction","genome_address","seq","getGenomeOwner","sent","returnSeq","hash","window","web3","eth","sendTransaction","utils","toWei","e","result","alert","location","replace","pending_requests","pending_update","message","handleClick","Register","handleSubmit","institution_name","preventDefault","addMember","class","onSubmit","type","captureSource","bind","placeholder","App","loading","loadWeb3","loadBlockchainData","ethereum","Web3","enable","currentProvider","getAccounts","accounts","net","getId","networkId","networkData","Athenomics","networks","Contract","abi","_this2","src_components_NavBar","react_router","exact","path","render","Home","assign","src_components_OpenRequests","src_components_PendingRequests","src_components_Register","Boolean","hostname","match","ReactDOM","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","_Users_dr_Desktop_Athenomics_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Users_dr_Desktop_Athenomics_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_dr_Desktop_Athenomics_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","captureFile","file","files","split","reader","FileReader","readAsArrayBuffer","onloadend","buffer","Buffer","source","ipfs","add","error","addGenome","_Users_dr_Desktop_Athenomics_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_dr_Desktop_Athenomics_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","genomeExists","memberExists","innerText","checkGenomeRequestExists","checkMemberExists","addRequest","show","ipfshash","genomes_update","map","genome","react__WEBPACK_IMPORTED_MODULE_7___default","role","href","rel","src","alt","htmlFor","require","host","port","protocol","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.51cae079.chunk.js","sourcesContent":["import React, {Component} from 'react';\n// import './modal.css';\n\nexport default class Modal extends Component {\n\n  onClose = e => {\n    this.props.onClose && this.props.onClose(e);\n  };\n  render() {\n    if (!this.props.show) {\n      return null;\n    }\n    return (\n      <div class=\"modal\" id=\"modal\">\n        <h2>Modal Window</h2>\n        <div class=\"content\">{this.props.children}</div>\n        <div class=\"actions\">\n          <button class=\"toggle-button\" onClick={this.onClose}>\n            close\n          </button>\n        </div>\n      </div>\n    );\n  }\n}","import React, {Component} from 'react';\nimport './NavBar.css'\nimport {Link} from 'react-router-dom';\n\nclass NavBar extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<nav className=\"navbar navbar-expand-lg navbar-dark \" id='navbar1'>\n\t\t\t\t<ul className=\"navbar-nav col-md-2 col-md-1 mr-0\">\n\t\t\t\t\t<li className='nav-item'><Link to='/'>Athenomics</Link></li>\n\n\t\t\t\t</ul>\n\t\t\t\t<ul className=\"navbar-nav col-md-2 col-md-1 mr-1\">\n\t\t\t\t\t<li className='nav-item'><Link to='/OpenRequests'>Open Requests</Link></li>\n\t\t\t\t</ul>\n\t\t\t\t<ul className=\"navbar-nav col-md-2 col-md-1 mr-1\">\n\t\t\t\t\t<li className='nav-item'><Link to='/PendingRequests'>Pending Requests</Link></li>\n\t\t\t\t</ul>\n\t\t\t\t<ul className=\"navbar-nav col-md-2 col-md-1 mr-1\">\n\t\t\t\t\t<li className='nav-item'><Link to='/Register'>Register</Link></li>\n\t\t\t\t</ul>\n\n        <ul className=\"navbar-nav px-2\">\n          <li className=\"nav-item text-nowrap d-none d-sm-nonee d-sm-block\">\n            <small className=\"text-black\">{this.props.account}</small>\n          </li>\n        </ul>\n\t\t\t</nav> \n\t\t)\n\t}\n}\n\nexport default NavBar","import React, { Component } from 'react';\nimport './OpenRequests.css'\n\n\nclass OpenRequests extends Component {\n\n\tconstructor(props){\n    super(props);\n    this.state = {\n      owned_genomes: {},\n    }\n  }\n\n\tasync componentWillMount() {\n    await this.updateTable()\n  }\n\n  async updateTable() {\n    if(!this.props.contract){\n      console.log('No Contract Connected!')\n      return\n    }\n    var owned_genomes_update = {}\n    const genomesCount = await this.props.contract.methods.genomesCount().call()\n    for(var i=1; i <= genomesCount; ++i){\n      const testGenome = await this.props.contract.methods.genomes(i).call()\n      if(testGenome.owner === this.props.account){\n      \tvar requests_status = [];\n      \tconst requests_all = await this.props.contract.methods.getGenomeRequests(testGenome.index).call()\n      \tfor(var j = 0; j < requests_all.length; ++j){\n      \t\tconst address = requests_all[j]\n      \t\tconst status = await this.props.contract.methods.getGenomeRequestStatus(testGenome.index, address).call()\n      \t\tconst name = await this.props.contract.methods.getMemberName(address).call()\n      \t\trequests_status.push([address, status.toNumber(), name])\n      \t}\n      \towned_genomes_update[testGenome.index.toNumber()] = {\n      \t\trequests: requests_status,\n      \t\tsource_type: testGenome.source_type\n      \t}\n      }\n    }\n    this.setState({ owned_genomes: owned_genomes_update })\n  }\n\n  acceptOffer = async event =>{\n    if(!this.props.contract){\n      console.log('No Contract Connected')\n      return\n    }\n    var owned_genomes_update = this.state.owned_genomes\n    const index = parseInt(event.target.id)\n    const mem_address = event.target.value\n    await this.props.contract.methods.changeRequest(index, mem_address, 3).send({from: this.props.account})\n    console.log('accept 1')\n    for(var i = 0; i < this.state.owned_genomes[index]['requests'].length; ++i){\n    \tif(this.state.owned_genomes['requests'][i][0] == mem_address){\n    \t\towned_genomes_update[index]['requests'][i][2]=2\n    \t\tconsole.log('here')\n    \t}\n    }\n    this.setState({owned_genomes: owned_genomes_update})\n  }\n\n  rejectOffer = async event =>{\n    if(!this.props.contract){\n      console.log('No Contract Connected')\n      return\n    }\n    var owned_genomes_update = this.state.owned_genomes\n    const index = parseInt(event.target.id)\n    const mem_address = event.target.value\n    await this.props.contract.methods.changeRequest(index, mem_address, 1).send({from: this.props.account}).then((r)=>{\n      console.log(r)\n    })\n    for(var i = 0; i < this.state.owned_genomes[index]['requests'].length; ++i){\n    \tif(this.state.owned_genomes['requests'][i][0] == mem_address){\n    \t\towned_genomes_update[index]['requests'][i][2]=0\n    \t\tconsole.log('here reject')\n    \t}\n    }\n    this.setState({owned_genomes: owned_genomes_update})\n  }\n\n  renderTableData() {\n  \tconsole.log(this.state.owned_genomes)\n  \tvar map_array = []\n  \tfor(const entries of Object.entries(this.state.owned_genomes)){\n  \t\tconsole.log(entries)\n  \t\tconst genome_index = parseInt(entries[0])\n  \t\tconst mem_address_array = entries[1]['requests']\n  \t\tconst source_type = entries[1]['source_type']\n  \t\tfor(var i = 0; i < mem_address_array.length; ++i){\n  \t\t\tconst mem_address = mem_address_array[i][0]\n  \t\t\tconst status = mem_address_array[i][1]\n  \t\t\tconst mem_name = mem_address_array[i][2]\n  \t\t\tvar disabled = true\n  \t\t\tif(status === 2){\n  \t\t\t\tdisabled = false\n  \t\t\t}\n  \t\t\tif(disabled) {\n  \t\t\t\tmap_array.push(\n\t  \t\t\t\t<tr key={genome_index.toString() + '.' + i.toString()}>\n\t\t          <td id={genome_index}> {genome_index} </td>\n\t\t          <td key={source_type}> {source_type}</td>\n\t\t          <td key={mem_address}>{mem_address}</td>\n\t\t          <td> <button className=\"btn btn-dark\" id={genome_index} value={mem_address} onClick={this.acceptOffer} disabled>Accept</button> </td>\n\t\t          <td><button className=\"btn btn-dark\" id={genome_index} value={mem_address} onClick={this.rejectOffer} disabled>Reject</button> </td>\n\t\t          <td>Pending Response from Member</td>\n\t\t        </tr>\n\t  \t\t\t)\n  \t\t\t} else {\n  \t\t\t\tmap_array.push(\n\t  \t\t\t\t<tr key={genome_index.toString() + '.' + i.toString()}>\n\t\t          <td id={genome_index}> {genome_index} </td>\n\t\t          <td key={source_type}> {source_type}</td>\n\t\t          <td key={mem_address}>{mem_name} ({mem_address})</td>\n\t\t          <td> <button className=\"btn btn-dark\" id={genome_index} value={mem_address} onClick={this.acceptOffer}>Accept</button></td>\n\t\t          <td> <button className=\"btn btn-dark\" id={genome_index} value={mem_address} onClick={this.rejectOffer}>Reject</button> </td>\n\t\t          <td>Please Respond</td>\n\t\t        </tr>\n\t  \t\t\t)\n  \t\t\t}\n  \t\t}\n  \t}\n  \treturn map_array\n  }\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"container-fluid mt-6\">\n          <h1 id='title1'>Open Requests</h1>\n          <table id='genome_requests' className=\"table table-hover table-bordered\" onChange={this.updateTable}>\n            <thead className='thead-dark'>\n              <tr>\n                <th scope=\"col\">Genome Index</th>\n                <th scope=\"col\">Source Type</th>\n                <th scope=\"col\">Member</th>\n                <th scope=\"col\">Accept</th>\n                <th scope=\"col\">Reject</th>\n                <th scope=\"col\">Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.renderTableData()}\n            </tbody>\n          </table>\n        </div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default OpenRequests;","import React, { Component } from 'react';\nimport './PendingRequests.css'\n\n\nclass PendingRequests extends Component {\n\n// 1 rejected 2 pending 3 approved \n\tconstructor(props){\n    super(props);\n    this.state = {\n      pending_requests: {},\n      hash: '',\n    }\n  }\n\n\tasync componentWillMount() {\n    await this.updateTable()\n  }\n\n  async updateTable() {\n    if(!this.props.contract){\n      console.log('No Contract Connected!')\n      return\n    }\n    var pending_update = {}\n    const genomesCount = await this.props.contract.methods.genomesCount().call()\n    for(var i=1; i <= genomesCount; ++i){\n      try{\n        const status = await this.props.contract.methods.getGenomeRequestStatus(i, this.props.account).call()\n        pending_update[i] = status.toNumber()\n      } catch {\n        continue\n      }\n    }\n    this.setState({ pending_requests: pending_update })\n    console.log(this.state.pending_requests)\n  }\n\n  // handleClick = async event =>{\n  //   // event.target.style.visibility = 'hidden'\n  //   console.log(this.props.account)\n  //   console.log(event.target.value)\n  //   const index = event.target.value - 1\n  //   const mem_address = this.props.account\n  //   var pending_requests_update = this.state.pending_requests\n  //   console.log(this.state.pending_requests)\n  //   await this.props.contract.methods.changeRequest(index, mem_address,1).send({from: this.props.account}).then((r)=>{\n  //     console.log(r)\n  //   })\n  //   for(var i = 0; i < this.state.pending_requests.length; ++i){\n  //     if(this.state.pending_requests[i] == 3){\n  //       pending_requests_update['index'] = 1\n  //       console.log('deleted')\n  //     }\n  //   }\n  //   this.setState({pending_requests: pending_requests_update})\n\n  // }\n\n  completeTransaction = async event =>{\n    const genome_index = event.target.id\n    const status = event.target.value\n    const genome_address = await this.props.contract.methods.getGenomeOwner(genome_index).call()\n    // console.log(seq)\n    const seq = await this.props.contract.methods.returnSeq(genome_index).call()\n    this.setState({hash:seq})\n    console.log(genome_address)\n    var completed = true;\n    await window.web3.eth.sendTransaction(\n      {\n        from: this.props.account,\n        to: genome_address,  \n        value: window.web3.utils.toWei(\"0.033\", \"ether\")\n      },\n      function(e, result) { \n        if(e){\n          window.alert('Transaction failed, please retry or delete')\n          console.log(e)\n        } else {\n          window.location.replace('https://ipfs.infura.io/ipfs/' + seq)\n        }\n      }\n\n    )    \n    // download from hash and delete transaction   \n\n\n  }\n\n  // handleClick = async event => {\n  //   const index = event.target.id\n  //   const status = event.target.value\n  //   await this.props.contract.methods.changeRequest(index, this.props.account, 1).send({from: this.props.account})\n  // }\n\n  renderTableData() {\n    var map_array = []\n  \t\n  \tfor(const entries of Object.entries(this.state.pending_requests)){\n      const genome_index = entries[0]\n      const status = entries[1]\n      const deleted = entries[2]\n      var disabled = true\n      var message = 'Pending'\n      if(status == 3) { \n        disabled = false\n        message = 'Complete'\n      } else if (status == 1){\n        message = 'Rejected'\n      }\n\t\t\tmap_array.push(\n\t\t\t\t<tr id={genome_index} key={genome_index}>\n          <td id={genome_index}> {entries[0]} </td>\n          <td>  <button className=\"btn btn-dark\"\n                  id={genome_index} value={status} onClick={this.completeTransaction} \n                  disabled={disabled}>\n                  {message}\n                </button> \n          </td>\n          <td>\n\n\n              <button className=\"btn btn-dark\" id={genome_index} \n              value={status} onClick={this.handleClick}>\n                  Delete\n              </button> \n          </td>\n        </tr>\n\t\t\t)\n  \t}\n    return map_array\n  }\n\n\trender() {\n\t\treturn (\n      <div className=\"container\">\n        <div className=\"container-fluid mt-6\">\n          <h1 id='title2'>Pending Requests</h1>\n          <table id='genome_requests' className=\"table table-hover table-bordered\" onChange={this.updateTable}>\n            <thead className='thead-dark'>\n              <tr>\n                <th scope=\"col\">Genome Index</th>\n                <th scope=\"col\">Status</th>\n                <th scope='col'> Delete </th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.renderTableData()}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    )\n\t}\n}\n\nexport default PendingRequests;","import React, { Component } from 'react';\nimport './Register.css'\n\n\nclass Register extends Component {\n\n\tconstructor(props){\n    super(props);\n    this.state = {\n      institution_name:'',\n    }\n  }\n\n   handleSubmit = async event => {\n    if(!this.props.contract){\n      console.log('No Contract Connected!')\n      return\n    }\n    event.preventDefault()\n    console.log(this.state.institution_name)\n    var institution_name = this.state.institution_name\n    console.log(institution_name)\n    this.props.contract.methods.addMember(institution_name).send({from: this.props.account}).then((r)=>{\n        console.log(r)        \n      })\n  }\n  captureSource(event){\n    event.preventDefault()\n    console.log(event.target.value)\n    this.setState({institution_name:event.target.value})\n    console.log(this.state.institution_name)\n  }\n\n\n\trender() {\n\t\treturn (\n     <div className=\"SearchBar\">\n        <h1>Registration</h1>\n \n      <div className=\"row\">\n      <div className=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\n        <div className=\"card card-signin my-5\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title text-center\">Institution Name</h5>\n            <form class=\"form-signin\" id='register' onSubmit={this.handleSubmit}>\n            <input type='text'  className=\"form-control\" onChange={this.captureSource.bind(this)} placeholder=\"Enter Name\"/>          \n            <button class=\"btn btn-lg btn-primary btn-block text-uppercase\" type=\"submit\">Register</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n      </div>\n\n\t\t)\n\t}\n}\n\nexport default Register;","import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Athenomics from './../abi/Athenomics.json';\nimport Home from './Home';\nimport NavBar from './NavBar';\nimport OpenRequests from './OpenRequests';\nimport PendingRequests from './PendingRequests';\nimport Register from './Register';\n\nimport {Route, link} from 'react-router-dom';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      loading: true,\n      account: '',\n      contract: null,\n    }\n  }\n\n  async componentDidMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n    this.setState({ loading: false }) \n    console.log(this.state)\n  }\n\n  // Get the account\n  // Get the network\n  // Get Smart Contract\n  // --> ABI: Athenomics.abi\n  // --> Address: networkData.address\n  // Get Genomic Hash\n\n  async loadWeb3() {\n    if(window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    } else {\n      window.alert(\"Please use MetaMask\");\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n    const accounts = await web3.eth.getAccounts()\n    this.setState({account: accounts[0]})\n    const networkId = await web3.eth.net.getId()\n    const networkData = Athenomics.networks[networkId]\n    if(networkData) {\n      // Fetch Contract\n      const contract = web3.eth.Contract(Athenomics.abi, networkData.address)\n      this.setState({ contract: contract })   \n    } else {\n      window.alert('Smart contract not deployed')\n    }\n  }\n\n  render() {\n    if(this.state.loading==true){\n      return(\n        <h2>\n          Initializing (If this hangs, there may be an issue with MetaMask)...\n        </h2>\n      )\n    }\n    return (\n      <div className=\"App\">\n        <NavBar account={this.state.account}/>\n        <Route exact path=\"/\" \n          render={(props) => <Home {...props} \n          account={this.state.account} \n          contract={this.state.contract}/>}\n        />\n        <Route exact path=\"/OpenRequests\" \n          render={(props) => <OpenRequests {...props} \n          account={this.state.account} \n          contract={this.state.contract}/>}\n        />\n        <Route exact path=\"/PendingRequests\" \n          render={(props) => <PendingRequests {...props} \n          account={this.state.account} \n          contract={this.state.contract}/>}\n        />\n        <Route exact path=\"/Register\" \n          render={(props) => <Register {...props} \n          account={this.state.account} \n          contract={this.state.contract}/>}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<App />\n\t</BrowserRouter>,\n\tdocument.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react';\nimport logo from './logo.png';\nimport ipfs from './ipfs';\nimport Modal from './modal';\nimport './Home.css'\n\nclass Home extends Component {\n\n  async componentWillMount() {\n    await this.updateTable()\n  }\n\n  constructor(props){\n    super(props);\n    this.state = {\n      buffer: null,\n      source: null,\n      genomes: [],\n      show: [false, 'Show Modal'],\n      ipfshash:''\n    }\n  }\n\n  captureFile = (event) =>{\n    event.preventDefault();\n\n    // process file for IPFS\n\n    const file = event.target.files[0];\n    const extension = file.name.split('.')[2];\n    console.log(file.name.split('.'))\n    console.log(file)\n    // var executablePath = \"/Users/dr/Desktop/Athenomics/geco-master/src/GeCo.exe\";\n    // var parameter1 = ['5']\n    // var parameter2 = [\"-l\"];\n    // var execFile = require('child_process').execFile, child;\n    // var exec = require('child_process').execFile;\n    //extension !== 'fasta' && extension !== 'fa'&& \n    // if(extension !== 'co' ){\n    //   window.alert('File type incorrect, please download and compress your file using the provided algorithm!')\n    //   document.getElementById('githublink').style.visibility = 'visible'\n\n    //   return;\n    // }\n    const reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n    reader.onloadend  = () => {\n      this.setState({ buffer: Buffer(reader.result) })\n    }\n  }\n\n  captureSource = (event) => {\n    event.preventDefault()\n    this.setState({source: event.target.value})\n  }\n\n  onSubmit = (event) => {\n    if(!this.props.contract){\n      console.log('No Contract Connected!')\n      return\n    }\n    event.preventDefault()\n    console.log(\"Submitting file to ipfs...\")\n    ipfs.add(this.state.buffer, (error, result) => {\n      if(error) {\n        console.error(error)\n        return\n      }\n      this.props.contract.methods.addGenome(result[0].hash, this.state.source).send({from: this.props.account}).then((r)=>{\n        console.log(r)        \n      })\n\n    })\n  }\n\n  async updateTable() {\n    if(!this.props.contract){\n      console.log('No Contract Connected!')\n      return\n    }\n    var genomes_update = []\n    const genomesCount = await this.props.contract.methods.genomesCount().call()\n    for(var i=1; i <= genomesCount; ++i){\n      const testGenome = await this.props.contract.methods.genomes(i).call()\n      genomes_update.push(testGenome);\n    }\n    this.setState({genomes: genomes_update})\n  }\n\n  handleClick = async event =>{\n    if(!this.props.contract){\n      console.log('No Contract Connected')\n      return\n    }\n    var index = parseInt(event.target.innerText)\n    var genomeExists = \n        await this.props.contract.methods.checkGenomeRequestExists(index, this.props.account).call()\n    genomeExists = genomeExists.toNumber()\n    const memberExists = \n        await this.props.contract.methods.checkMemberExists(this.props.account).call()\n    if(this.props.account == this.state.genomes[index-1].owner) {\n      window.alert('Cannot Request Owned Genome!')\n      return\n    } else if (genomeExists == 1 || genomeExists == 2 || genomeExists == 3) {\n      window.alert('Open Request for this sample already exists')\n      return\n    } else if(memberExists == false) {\n      window.alert('Must Register Before Requesting Genomes')\n      return\n    }\n    this.props.contract.methods.addRequest(index).send({from: this.props.account}).then((r)=>{\n      console.log(r)\n    })\n  }\n\n  renderTableData() {\n    return this.state.genomes.map((genome, index) => {\n      return (\n        <tr key={genome.index.toNumber()}>\n          <td id={genome.index}> {genome.index.toNumber()} </td>\n          <td key={genome.owner} >{genome.owner}</td>\n          <td key={genome.seq} >{genome.seq}</td>\n          <td key={genome.source_type} >{genome.source_type}</td>\n          <td> <button className=\"btn btn-dark\">{genome.index.toNumber()} </button> </td>\n        </tr>\n      )\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"container-fluid mt-3\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\n              <div className=\"content mr-auto ml-auto\" id='div1'>\n                <a\n                  href=\"./\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <img src={'https://ipfs.io/ipfs/QmRaVYPnxSoXbxV6xom6Hhv3jsKvDCa1MRRKVEt8MbTRrD'} className=\"App-logo\" alt=\"logo\" />\n                </a>\n                <h2> Add Genome </h2>\n                <a id=\"githublink\" href='https://github.com/cobilab/geco'> Compression Algorithm </a>\n\n                <form className='form1' onSubmit={this.onSubmit} >\n                  <input type='file' onChange={this.captureFile} />\n                  <label htmlFor=\"sourceType\">Source</label>\n                  <input type=\"text\" id=\"source\" placeholder=\"Enter source\" onChange={this.captureSource}/>\n                  <input type='submit'/>\n                </form>  \n              </div>\n            </main>\n          </div>\n        </div>\n\n\n        <div className=\"container-fluid mt-6\">\n          <h1 id='title'>Publically Available Genomes</h1>\n\n          <table id='genomes' className=\"table table-hover table-bordered table-striped\" onChange={this.updateTable}>\n            <thead className='thead-dark'>\n              <tr>\n                <th scope=\"col\">Index</th>\n                <th scope=\"col\">Owner</th>\n                <th scope=\"col\">Hash</th>\n                <th scope=\"col\">sourceType</th>\n                <th scope=\"col\">button</th>\n                \n              </tr>\n            </thead>\n\n            <tbody onClick={this.handleClick}>\n              {this.renderTableData()}\n            </tbody>\n          </table>\n        </div>\n\n      </div>\n\n\n    );\n  }\n}\n\nexport default Home;\n","const IPFS = require('ipfs-http-client');\nconst ipfs = new IPFS({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\n\nexport default ipfs;","module.exports = __webpack_public_path__ + \"static/media/logo.0d312a83.png\";"],"sourceRoot":""}