{"version":3,"sources":["serviceWorker.js","index.js","components/App.js","logo.png","components/ipfs.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","props","_this","Object","_Users_dr_Desktop_Athenomics_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_Users_dr_Desktop_Athenomics_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_dr_Desktop_Athenomics_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","captureFile","event","preventDefault","file","target","files","extension","name","split","reader","FileReader","readAsArrayBuffer","onloadend","setState","buffer","Buffer","result","captureSource","source","value","onSubmit","console","log","ipfs","add","state","error","ipfsHash","hash","contract","methods","addGenome","send","from","account","r","handleClick","_ref","_Users_dr_Desktop_Athenomics_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_dr_Desktop_Athenomics_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","index","wrap","_context3","prev","next","parseInt","innerText","genomes","owner","stop","_x","apply","arguments","loadWeb3","loadBlockchainData","updateTable","web3","eth","getAccounts","accounts","net","getId","networkId","networkData","Athenomics","networks","address","Contract","abi","alert","ethereum","Web3","enable","currentProvider","genomesCount","i","testGenome","push","map","genome","react__WEBPACK_IMPORTED_MODULE_7___default","key","id","seq","source_type","className","href","rel","role","src","logo","alt","type","onChange","htmlFor","placeholder","scope","onClick","renderTableData","Component","module","exports","__webpack_require__","p","require","host","port","protocol"],"mappings":"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","file":"static/js/main.2fd3b2e4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react';\nimport logo from '../logo.png';\nimport './App.css';\nimport ipfs from './ipfs';\nimport Web3 from 'web3';\nimport Athenomics from './../abi/Athenomics.json';\n\nclass App extends Component {\n\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n    await this.updateTable()\n  }\n\n  // Get the account\n  // Get the network\n  // Get Smart Contract\n  // --> ABI: Athenomics.abi\n  // --> Address: networkData.address\n  // Get Genomic Hash\n  async loadBlockchainData() {\n    const web3 = window.web3\n    const accounts = await web3.eth.getAccounts()\n    this.setState({account: accounts[0]})\n    const networkId = await web3.eth.net.getId()\n    const networkData = Athenomics.networks[networkId]\n    if(networkData) {\n      // Fetch Contract\n      console.log(networkData.address)\n      const contract = web3.eth.Contract(Athenomics.abi, networkData.address)\n      this.setState({ contract: contract })    \n    } else {\n      window.alert('Smart contract not deployed')\n    }\n  }\n\n  constructor(props){\n    super(props);\n    this.state = {\n      account: '',\n      buffer: null,\n      ipfsHash: null,\n      source: null,\n      contract: null,\n      genomes: [],\n    }\n\n  }\n\n  async loadWeb3() {\n    if(window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    } else {\n      window.alert(\"Please use MetaMask\");\n    }\n  }\n\n  captureFile = (event) =>{\n    event.preventDefault();\n    // process file for IPFS\n    const file = event.target.files[0];\n    const extension = file.name.split('.')[1];\n    if(extension !== 'fasta' && extension !== 'fa'){\n      return;\n    }\n    const reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n    reader.onloadend  = () => {\n      this.setState({ buffer: Buffer(reader.result) })\n    }\n  }\n\n  captureSource = (event) => {\n    event.preventDefault()\n    this.setState({source: event.target.value})\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault()\n    console.log(\"Submitting file to ipfs...\")\n    ipfs.add(this.state.buffer, (error, result) => {\n      console.log('Ipfs result', result)\n      if(error) {\n        console.error(error)\n        return\n      }\n      this.setState({ipfsHash: result[0].hash})\n      console.log('ipfsHash', this.state.ipfsHash, this.state.source)\n      this.state.contract.methods.addGenome(result[0].hash, this.state.source).send({from: this.state.account}).then((r)=>{\n        console.log(r)        \n      })\n\n    })\n  }\n\n\n  async updateTable() {\n    this.state.genomes = []\n    const genomesCount = await this.state.contract.methods.genomesCount().call()\n    for(var i=1; i <= genomesCount; ++i){\n      const testGenome = await this.state.contract.methods.genomes(genomesCount).call()\n      testGenome.index = i;\n      this.state.genomes.push(testGenome);\n    }\n  }\n\n  handleClick = async event =>{\n    console.log(\"clicked\")\n    console.log(parseInt(event.target.innerText))\n    var index = parseInt(event.target.innerText)\n    console.log(index)\n    console.log(this.state.genomes)\n    console.log(this.state.genomes[index-1].owner)\n  }\n\n\n  renderTableData() {\n    return this.state.genomes.map((genome, index) => {\n      return (\n        <tr key={genome.owner}>\n          <td id={genome.index}> {genome.index} </td>\n          <td key={genome.owner} >{genome.owner}</td>\n          <td key={genome.seq} >{genome.seq}</td>\n          <td key={genome.source_type} >{genome.source_type}</td>\n          <td id={genome.index}> <button className=\"btn btn-dark\">{genome.index} </button> </td>\n        </tr>\n      )\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n          <a\n            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n            href=\"http://www.dappuniversity.com/bootcamp\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Athenomics\n          </a>\n          <ul className=\"navbar-nav px-3\">\n            <li className=\"nav-item text-nowrap d-none d-sm-nonee d-sm-block\">\n              <small className=\"text-white\">{this.state.account}</small>\n            </li>\n          </ul>\n        </nav>\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\n              <div className=\"content mr-auto ml-auto\">\n                <a\n                  href=\"http://www.dappuniversity.com/bootcamp\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                </a>\n                <p>&nbsp;</p> \n                <h2> Add Genome </h2>\n                <form onSubmit={this.onSubmit} >\n                  <input type='file' onChange={this.captureFile} />\n                  <label htmlFor=\"sourceType\">Source</label>\n                  <input type=\"text\" id=\"source\" placeholder=\"Enter source\" onChange={this.captureSource}/>\n                  <input type='submit'/>\n                </form>  \n              </div>\n            </main>\n          </div>\n        </div>\n        <div className=\"container-fluid mt-5\">\n          <h1 id='title'>Publically Available Genomes</h1>\n          <table id='genomes' className=\"table table-hover table-bordered\" onChange={this.updateTable}>\n            <thead>\n              <tr>\n                <th scope=\"col\">Index</th>\n                <th scope=\"col\">Owner</th>\n                <th scope=\"col\">Hash</th>\n                <th scope=\"col\">sourceType</th>\n                <th scope=\"col\">button</th>\n                \n              </tr>\n            </thead>\n\n            <tbody onClick={this.handleClick}>\n              {this.renderTableData()}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","module.exports = __webpack_public_path__ + \"static/media/logo.06825633.png\";","const IPFS = require('ipfs-http-client');\nconst ipfs = new IPFS({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\n\nexport default ipfs;"],"sourceRoot":""}