
Nabunomics is deployed in the Test Ropsten Network. Here is the link: (Please refer to the instructions below before proceeding (1 & 2 are unneeded if not uploading a genome))

http://gateway.ipfs.io/ipfs/QmYPrZxP1QUh6DUeVNaEfU33rahhzumy4bct7hmEYn1fQL

In order to test on the page: 
1. Navigate to https://github.com/cobilab/geco
2. Download and install the compressor/decompressor (Test data available in test_data folder of Nabunomics gitHub )
1. Install Metamask as a Chrome extension 
2. Create an account
3. Connect to the Ropsten Test Network
4. Navigate to https://faucet.metamask.io/
5. Obtain 1 ether from the faucet
6. Navigate to link above and begin testing (requires 2 accounts in order to test purchasing function)



<<Development Purposes>>

<How to build the application locally>

	Prerequisites:

		- Node and npm. Refer to Google to install these.

		- This application is for Ethereum but runs on the Ropsten Test Network (if not accessing locally, but through the web), so you must have MetaMask installed in order to interact with the page. For local development purposes, you must have the Truffle Suite in order to run the application. Refer to the following link: 

			https://www.npmjs.com/package/truffle

			npm install -g truffle

			and ganache-cli:

			https://www.npmjs.com/package/ganache-cli

			npm install -g ganache-cli

		- An Online Ethereum Wallet is necessary to make transactions via web. Chrome Extensions such as MetaMask is required. Refer to the following link for MetaMask:

			https://metamask.io/

	
	1. Download all packages for npm from the root folder:

		npm install

	3. Run ganache-cli from port 7545:

		$:ganache-cli -p 7545

	4. Connect Metamask to the ganache local blockchain. Configure a custom RPC (click metamask icon, then network, then custom RPC) and connect to localhost:7545. Then import an account into Metamask and select one of the private keys listed when starting ganache-cli. It should have 100 ether to start off with


	5. Check the contract before deploying using a test file:

		truffle test


	6. Migrate your contract. This will consume gas:

		truffle migrate 

		- If you have previously tried to migrate, then:

			truffle migrate --reset


	7. After migrating your contract, run the application:

		npm run start


	8. Access your application using:

		localhost:3000